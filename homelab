#!/bin/bash

source ${ROOTDIR}/.env
VERSION=0.0.1
DEFAULT_CONFIG_DIR=~/.config/homelab

function parse_args() {
    while [[ $# -gt 0 ]]; do
        ARG="$1"
        case $ARG in
        setup)
            COMMAND="${COMMAND:-do_setup}"
            shift
            ;;
        teardown)
            COMMAND="${COMMAND:-do_teardown}"
            shift
            ;;
        -c|--config-dir)
            CONFIG_DIR="$2"
            shift 2
            ;;
        *)
            shift
            ;;
        esac
    done

    if [ -z ${COMMAND} ]; then
        print_usage
    fi

    CONFIG_DIR=${CONFIG_DIR:-$DEFAULT_CONFIG_DIR}
    if [ ! -d ${CONFIG_DIR} ]; then
        print_usage
    fi
}

function do_setup() {
    # Copy installation files to the remote server
    rsync -arvzP \
        ${CI_SSH_KEY_PATH}/${CI_PUBLIC_KEY_FILE} \
        ${CI_SSH_KEY_PATH}/${CI_PRIVATE_KEY_FILE} \
        ${CONFIG_DIR}/proxmox/ \
        ${ROOTDIR}/.env \
        ${ROOTDIR}/cmd/setup/ \
        ${PROXMOX_USER}@${PROXMOX_HOST}:${SERVER_ROOT_DIR}

    # Execute command on remote server
    ssh ${PROXMOX_USER}@${PROXMOX_HOST} "${SERVER_ROOT_DIR}/setup.sh; rm -rf ${SERVER_ROOT_DIR}"
}

function do_teardown() {
    # Copy installation files to the remote server
    rsync -arvzP \
        ${CONFIG_DIR}/proxmox/ \
        ${ROOTDIR}/.env \
        ${ROOTDIR}/cmd/teardown/ \
        ${PROXMOX_USER}@${PROXMOX_HOST}:${SERVER_ROOT_DIR}

    # Execute command on remote server
    ssh ${PROXMOX_USER}@${PROXMOX_HOST} "${SERVER_ROOT_DIR}/teardown.sh; rm -rf ${SERVER_ROOT_DIR}"
}

function print_usage() {
    echo "Homelab v${VERSION}"
    echo "Usage: $(basename "$0") [setup|teardown]" 
    exit 1
}

parse_args $@
$COMMAND 
